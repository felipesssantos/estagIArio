name: Deploy to Amazon EKS

# Gatilho: Roda a pipeline toda vez que houver um push na branch 'main'
on:
  push:
    branches:
      - main

# Permissões necessárias para autenticação via OIDC com a AWS
permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Baixa o código do seu repositório
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configura as credenciais da AWS usando a Role criada
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Faz login no Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4. Constrói a imagem Docker, adiciona a tag e envia para o ECR
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }} # Usa o hash do commit como tag da imagem
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      # 5. Faz o deploy no Amazon EKS
      - name: Deploy to Amazon EKS
        env:
          EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          # Configura o contexto do kubectl para o seu cluster EKS
          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
          
          # Atualiza a imagem do seu deployment no Kubernetes
          # Substitua 'estagiario-deployment' pelo nome do seu deployment
          # Substitua 'estagiario-container' pelo nome do seu container dentro do deployment
          kubectl set image deployment/estagiario-deployment estagiario-container=${{ steps.build-image.outputs.image }} -n default