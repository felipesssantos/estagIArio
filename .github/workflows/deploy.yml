name: Deploy to Amazon EKS with Terraform

# Gatilho: Roda a pipeline toda vez que houver um push na branch 'main'
on:
  push:
    branches:
      - main

# Permissões necessárias para autenticação via OIDC com a AWS
permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Baixa o código do repositório
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configura as credenciais da AWS usando a Role criada
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Faz login no Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4. Constrói a imagem Docker, adiciona a tag e envia para o ECR
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }} # Usa o hash do commit como tag da imagem
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      # 5. Instala o Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # 6. Inicializa o Terraform
      # O -backend-config permite configurar o backend S3 para armazenar o estado do terraform
      - name: Terraform Init
        run: |
          terraform -chdir=./terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=estagiario/terraform.tfstate" \
            -backend-config="region=${{ secrets.AWS_REGION }}"

      # 7. Executa o Terraform para aplicar as mudanças
      - name: Terraform Apply
        run: |
          terraform -chdir=./terraform apply -auto-approve \
            -var="app_image=${{ steps.build-image.outputs.image }}" \
            -var="eks_cluster_name=${{ secrets.EKS_CLUSTER_NAME }}" \
            -var="openai_api_key=${{ secrets.OPENAI_API_KEY }}" \
            -var="cnj_api_key=${{ secrets.CNJ_API_KEY }}"